{"version":3,"file":"index.js","sources":["../src/js/render-functions.js","../src/js/pixabay-api.js","../src/main.js"],"sourcesContent":["\nexport function createMarkup(dataArr) {\n  return dataArr.map(({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) =>\n    `<li class=\"gallery--list\">\n  <a class=\"gallery--link\" href=\"${largeImageURL}\">\n  <img\n  class=\"gallery--image\"\n                src=\"${webformatURL}\"\n                alt=\"${tags}\"\n                width=\"360\"\n                height=\"200\"\n              />\n            </a>\n            <div class=\"thumb--box\">\n              <div class=\"thumb--item\">\n                <h2 class=\"thumb--tittle\">Likes</h2>\n                <p class=\"thumb--amount\">${likes}</p>\n              </div>\n              <div class=\"thumb--item\">\n                <h2 class=\"thumb--tittle\">Views</h2>\n                <p class=\"thumb--amount\">${views}</p>\n              </div>\n              <div class=\"thumb--item\">\n                <h2 class=\"thumb--tittle\">Comments</h2>\n                <p class=\"thumb--amount\">${comments}</p>\n              </div>\n              <div class=\"thumb--item\">\n                <h2 class=\"thumb--tittle\">Downloads</h2>\n                <p class=\"thumb--amount\">${downloads}</p>\n              </div>\n            </div>\n          </li>`)\n      .join('');\n  }\n\n\nexport function scrollByElemHeight()  {\n\n    const getHeightImgCard = () => document.querySelector('.gallery--list').getBoundingClientRect();\n    \n    window.scrollBy({\n      top: getHeightImgCard().height * 2,\n      left: 0,\n      behavior: \"smooth\",\n  });\n  }","import axios from 'axios';\n\nexport const perPage = 140;\n\n/*  Function  API  */\n\nexport async function getImages(inputValue, page) {\n    \n    const KEY = \"48554296-d2b735e3ffae040ef4553c6bb\";\n\n    try {\n\n    const response = await axios.get(`https://pixabay.com/api/` , {\n        params: {\n            key: KEY,\n            q: inputValue,\n            image_type: 'photo',\n            orientation: 'horizontal',\n            safesearch: true,\n            page: page,\n            per_page: perPage,\n        }\n    })\n    return response.data;\n    }\n    catch {\n        throw new Error(res.statusText);\n        }\n}","/* Import */\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nimport { createMarkup } from \"./js/render-functions\";\nimport { getImages } from \"./js/pixabay-api\";\nimport { scrollByElemHeight } from \"./js/render-functions\";\n\n/*   Variables   */ \n\nconst listImages = document.querySelector('.gallery');\nconst loader = document.querySelector('.loader');\nconst nextLoading = document.querySelector('.more');\n\nconst form = document.querySelector(\".form\");\n\n// Controls the group number\nlet page = 1;\n\n// Controls the number of items in the group\nimport { perPage } from \"./js/pixabay-api\";\n\nlet inputValue = '';\n\n/*  Setup for gallery render */\n\nconst refreshPage = new SimpleLightbox('.gallery a', {\n    captions: true,\n    captionsData: 'alt',\n    captionDelay: 250,\n});\n\n/*   A P I  S E R V I E S   */ \n\n\n/*  Event Listener  */\n\nform.addEventListener(\"submit\" , async (event) => {\n    event.preventDefault();\n\n    inputValue = form.search.value.trim();\n\n    page = 1;\n\n    nextLoading.classList.add('hidden');\n    loader.classList.remove('hidden');\n\n    listImages.innerHTML = \"\";\n\n    if(inputValue.length === 0 || inputValue === \"\") {\n\n         iziToast.warning({\n             title: 'Warning',\n             message: 'Please, enter a value!',\n\n             titleColor: 'white',\n            messageColor: 'white',\n             titleSize: '12px',\n             backgroundColor: '#ef4040',\n\n             iconColor: 'white',\n             position: 'topRight'\n         });\n\n         loader.classList.add('hidden');\n\n         return;\n    }\n\n     await getImages(inputValue, page)\n    .then(data => {\n            if (!data.hits.length) {\n                iziToast.warning({\n                       title: 'Warning',\n                       message: 'Sorry, there are no images matching your search query. Please try again!',\n        \n                       titleColor: 'white',\n                       messageColor: 'white',\n                       titleSize: '12px',\n                       backgroundColor: '#ef4040',\n        \n                       iconColor: 'white',\n                       position: 'topRight'\n                });\n\n                \n                loader.classList.add('hidden');\n                nextLoading.classList.add('hidden');\n\n                form.reset();\n\n            } else {\n        \n            listImages.insertAdjacentHTML(\"beforeend\", createMarkup(data.hits));\n    \n            loader.classList.add('hidden');\n            nextLoading.classList.remove('hidden');\n        \n            refreshPage.refresh();\n            form.reset();\n\n            }\n        })\n\n    .catch(error => {\n            iziToast.error({\n                title: 'Error',\n                message: 'Something went wrong. Please try again later.',\n    \n                titleColor: 'white',\n                messageColor: 'white',\n                titleSize: '12px',\n                backgroundColor: '#ef4040',\n    \n                iconColor: 'white',\n                position: 'topRight'\n            })\n\n            form.reset()\n        });\n});\n\nnextLoading.addEventListener(\"click\", async () => {\n\n    // Increase page number\n    page += 1;\n\n   await getImages(inputValue, page)\n    \n    .then(data => {\n    \n      const totalPages = Math.ceil(data.totalHits / perPage);\n\n      listImages.insertAdjacentHTML(\"beforeend\", createMarkup(data.hits));\n\n      scrollByElemHeight();\n\n      refreshPage.refresh();\n\n      if (page === totalPages || data.hits <= totalPages) {\n\n        nextLoading.style.display = \"none\";\n\n        iziToast.error({\n            title: 'No images data',\n            message: 'You have viewed all images.',\n\n            titleColor: 'white',\n            messageColor: 'white',\n            titleSize: '12px',\n            backgroundColor: '#ef4040',\n\n            iconColor: 'white',\n            position: 'topRight'\n        })\n      }\n})\n\n    .catch(error => {\n        iziToast.error({\n            title: 'Error',\n            message: 'Something went wrong. Please try again later.',\n\n            titleColor: 'white',\n            messageColor: 'white',\n            titleSize: '12px',\n            backgroundColor: '#ef4040',\n\n            iconColor: 'white',\n            position: 'topRight'\n        })\n\n        form.reset()\n    });\n  })"],"names":["createMarkup","dataArr","webformatURL","largeImageURL","tags","likes","views","comments","downloads","scrollByElemHeight","getHeightImgCard","perPage","getImages","inputValue","page","KEY","axios","listImages","loader","nextLoading","form","refreshPage","SimpleLightbox","event","iziToast","data","error","totalPages"],"mappings":"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"}